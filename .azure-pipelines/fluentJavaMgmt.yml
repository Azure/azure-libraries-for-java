# External variables Settable at queue time:
# "pomFile" : "pom.xml".   This is the project object model file for Maven.

trigger:
  - master

pr:
  - master

variables:
  DefaultOptions: '--settings settings.xml -Dmaven.wagon.http.pool=false'
  LoggingOptions: '-Dorg.slf4j.simpleLogger.defaultLogLevel=error -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn'

jobs:
  - job: 'CredentialScan'
    timeoutInMinutes: 120
    strategy:
      matrix:
        Windows - Java 8:
          OSName: 'Windows'
          OSVmImage: 'vs2017-win2016'
          JavaVersion: '1.8'
          ProfileFlag: ''
    
    pool:
      vmImage: $(OSVmImage)
    
    steps:
      - task: ms-codeanalysis.vss-microsoft-security-code-analysis-devops.build-task-credscan.CredScan@2
        displayName: 'Run Credential Scanner'
        inputs:
          toolMajorVersion: V2
          toolVersionV2: 'Latest'
          suppressionsFile: './tools/credscan/CredScanSuppressions.json'

      - task: ms-codeanalysis.vss-microsoft-security-code-analysis-devops.build-task-postanalysis.PostAnalysis@1
        displayName: 'PostAnalysis'
        inputs:
          AllTools: false
          BinSkim: false
          CredScan: true
          RoslynAnalyzers: false
          TSLint: false
          ToolLogsNotFoundAction: 'Standard'

      - task: PublishTestResults@2
        condition: succeededOrFailed()
        inputs:
          mergeTestResults: true
          testRunTitle: 'on Credential Scan'

  - job: 'StyleCheck'
    timeoutInMinutes: 120
    strategy:
      matrix:
        Windows - Java 8:
          OSName: 'Windows'
          OSVmImage: 'vs2017-win2016'
          JavaVersion: '1.8'
          ProfileFlag: ''
    
    pool:
      vmImage: $(OSVmImage)
    
    steps:
      - task: Maven@3
        displayName: 'install'
        inputs:
          mavenPomFile: pom.xml
          options: '--batch-mode $(DefaultOptions) $(ProfileFlag) -pl !azure-samples javadoc:aggregate -DskipTests=true -DpackageOutputDirectory=$(Build.ArtifactStagingDirectory)" -am'
          mavenOptions: '$(LoggingOptions)'
          javaHomeOption: 'JDKVersion'
          jdkVersionOption: $(JavaVersion)
          jdkArchitectureOption: 'x64'
          publishJUnitResults: false
          goals: 'install'

      - task: Maven@3
        displayName: 'Run StyleCheck'
        inputs:
          mavenPomFile: pom.xml
          options: '$(DefaultOptions) $(ProfileFlag)'
          mavenOptions: '$(LoggingOptions)'
          javaHomeOption: 'JDKVersion'
          jdkVersionOption: $(JavaVersion)
          jdkArchitectureOption: 'x64'
          publishJUnitResults: false
          goals: 'checkstyle:check'

      - task: PublishTestResults@2
        condition: succeededOrFailed()
        inputs:
          mergeTestResults: true
          testRunTitle: 'on Style Check'

  - job: 'Test'
    timeoutInMinutes: 120

    strategy:
      matrix:

        Windows - Java 8:
          OSName: 'Windows'
          OSVmImage: 'vs2017-win2016'
          JavaVersion: '1.8'
          ProfileFlag: ''
        Windows - Java 7:
          OSName: 'Windows'
          OSVmImage: 'vs2017-win2016'
          JavaVersion: '1.7'
          ProfileFlag: ''
        Linux - Java 8:
          OSName: 'Linux'
          OSVmImage: 'ubuntu-18.04'
          JavaVersion: '1.8'
          ProfileFlag: ''
        Linux - Java 7:
          OSName: 'Linux'
          OSVmImage: 'ubuntu-18.04'
          JavaVersion: '1.7'
          ProfileFlag: ''

    pool:
      vmImage: $(OSVmImage)
      
    steps:
      - task: Maven@3
        displayName: 'install'
        inputs:
          mavenPomFile: pom.xml
          options: '--batch-mode $(DefaultOptions) $(ProfileFlag) -pl !azure-samples javadoc:aggregate -DskipTests=true -DpackageOutputDirectory=$(Build.ArtifactStagingDirectory)" -am'
          mavenOptions: '$(LoggingOptions)'
          javaHomeOption: 'JDKVersion'
          jdkVersionOption: $(JavaVersion)
          jdkArchitectureOption: 'x64'
          publishJUnitResults: false
          goals: 'install'

      - task: Maven@3
        displayName: 'Start Jetty'
        inputs:
          mavenPomFile: pom.xml
          options: '$(ProfileFlag)'
          mavenOptions: '$(LoggingOptions)'
          javaHomeOption: 'JDKVersion'
          jdkVersionOption: $(JavaVersion)
          jdkArchitectureOption: 'x64'
          publishJUnitResults: false
          goals: 'jetty:run-forked'
          
      - task: Maven@3
        displayName: 'Run Tests on Java $(JavaVersion)'
        inputs:
          mavenPomFile: pom.xml
          options: '--batch-mode $(DefaultOptions) $(ProfileFlag) -Dsurefire.rerunFailingTestsCount=3 -Dparallel=classes -DthreadCount=2 -DforkCount=1C'
          mavenOptions: '$(LoggingOptions)'
          javaHomeOption: 'JDKVersion'
          jdkVersionOption: $(JavaVersion)
          jdkArchitectureOption: 'x64'
          publishJUnitResults: false
          goals: 'test'
          
      - task: PublishTestResults@2
        condition: succeededOrFailed()
        inputs:
          mergeTestResults: true
          testRunTitle: 'On Java $(JavaVersion)'
