/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.datafactory;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.microsoft.rest.serializer.JsonFlatten;
import com.microsoft.azure.management.datafactory.implementation.LinkedServiceInner;

/**
 * HDInsight linked service.
 */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "type")
@JsonTypeName("HDInsight")
@JsonFlatten
public class HDInsightLinkedService extends LinkedServiceInner {
    /**
     * HDInsight cluster URI. Type: string (or Expression with resultType
     * string).
     */
    @JsonProperty(value = "typeProperties.clusterUri", required = true)
    private Object clusterUri;

    /**
     * HDInsight cluster user name. Type: string (or Expression with resultType
     * string).
     */
    @JsonProperty(value = "typeProperties.userName")
    private Object userName;

    /**
     * HDInsight cluster password.
     */
    @JsonProperty(value = "typeProperties.password")
    private SecretBase password;

    /**
     * The Azure Storage linked service reference.
     */
    @JsonProperty(value = "typeProperties.linkedServiceName")
    private LinkedServiceReference linkedServiceName;

    /**
     * A reference to the Azure SQL linked service that points to the HCatalog
     * database.
     */
    @JsonProperty(value = "typeProperties.hcatalogLinkedServiceName")
    private LinkedServiceReference hcatalogLinkedServiceName;

    /**
     * The encrypted credential used for authentication. Credentials are
     * encrypted using the integration runtime credential manager. Type: string
     * (or Expression with resultType string).
     */
    @JsonProperty(value = "typeProperties.encryptedCredential")
    private Object encryptedCredential;

    /**
     * Get the clusterUri value.
     *
     * @return the clusterUri value
     */
    public Object clusterUri() {
        return this.clusterUri;
    }

    /**
     * Set the clusterUri value.
     *
     * @param clusterUri the clusterUri value to set
     * @return the HDInsightLinkedService object itself.
     */
    public HDInsightLinkedService withClusterUri(Object clusterUri) {
        this.clusterUri = clusterUri;
        return this;
    }

    /**
     * Get the userName value.
     *
     * @return the userName value
     */
    public Object userName() {
        return this.userName;
    }

    /**
     * Set the userName value.
     *
     * @param userName the userName value to set
     * @return the HDInsightLinkedService object itself.
     */
    public HDInsightLinkedService withUserName(Object userName) {
        this.userName = userName;
        return this;
    }

    /**
     * Get the password value.
     *
     * @return the password value
     */
    public SecretBase password() {
        return this.password;
    }

    /**
     * Set the password value.
     *
     * @param password the password value to set
     * @return the HDInsightLinkedService object itself.
     */
    public HDInsightLinkedService withPassword(SecretBase password) {
        this.password = password;
        return this;
    }

    /**
     * Get the linkedServiceName value.
     *
     * @return the linkedServiceName value
     */
    public LinkedServiceReference linkedServiceName() {
        return this.linkedServiceName;
    }

    /**
     * Set the linkedServiceName value.
     *
     * @param linkedServiceName the linkedServiceName value to set
     * @return the HDInsightLinkedService object itself.
     */
    public HDInsightLinkedService withLinkedServiceName(LinkedServiceReference linkedServiceName) {
        this.linkedServiceName = linkedServiceName;
        return this;
    }

    /**
     * Get the hcatalogLinkedServiceName value.
     *
     * @return the hcatalogLinkedServiceName value
     */
    public LinkedServiceReference hcatalogLinkedServiceName() {
        return this.hcatalogLinkedServiceName;
    }

    /**
     * Set the hcatalogLinkedServiceName value.
     *
     * @param hcatalogLinkedServiceName the hcatalogLinkedServiceName value to set
     * @return the HDInsightLinkedService object itself.
     */
    public HDInsightLinkedService withHcatalogLinkedServiceName(LinkedServiceReference hcatalogLinkedServiceName) {
        this.hcatalogLinkedServiceName = hcatalogLinkedServiceName;
        return this;
    }

    /**
     * Get the encryptedCredential value.
     *
     * @return the encryptedCredential value
     */
    public Object encryptedCredential() {
        return this.encryptedCredential;
    }

    /**
     * Set the encryptedCredential value.
     *
     * @param encryptedCredential the encryptedCredential value to set
     * @return the HDInsightLinkedService object itself.
     */
    public HDInsightLinkedService withEncryptedCredential(Object encryptedCredential) {
        this.encryptedCredential = encryptedCredential;
        return this;
    }

}
