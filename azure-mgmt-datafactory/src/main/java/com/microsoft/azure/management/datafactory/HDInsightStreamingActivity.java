/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.datafactory;

import java.util.List;
import java.util.Map;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.microsoft.rest.serializer.JsonFlatten;

/**
 * HDInsight streaming activity type.
 */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "type")
@JsonTypeName("HDInsightStreaming")
@JsonFlatten
public class HDInsightStreamingActivity extends ExecutionActivity {
    /**
     * Storage linked service references.
     */
    @JsonProperty(value = "typeProperties.storageLinkedServices")
    private List<LinkedServiceReference> storageLinkedServices;

    /**
     * User specified arguments to HDInsightActivity.
     */
    @JsonProperty(value = "typeProperties.arguments")
    private List<Object> arguments;

    /**
     * Debug info option. Possible values include: 'None', 'Always', 'Failure'.
     */
    @JsonProperty(value = "typeProperties.getDebugInfo")
    private HDInsightActivityDebugInfoOption getDebugInfo;

    /**
     * Mapper executable name. Type: string (or Expression with resultType
     * string).
     */
    @JsonProperty(value = "typeProperties.mapper", required = true)
    private Object mapper;

    /**
     * Reducer executable name. Type: string (or Expression with resultType
     * string).
     */
    @JsonProperty(value = "typeProperties.reducer", required = true)
    private Object reducer;

    /**
     * Input blob path. Type: string (or Expression with resultType string).
     */
    @JsonProperty(value = "typeProperties.input", required = true)
    private Object input;

    /**
     * Output blob path. Type: string (or Expression with resultType string).
     */
    @JsonProperty(value = "typeProperties.output", required = true)
    private Object output;

    /**
     * Paths to streaming job files. Can be directories.
     */
    @JsonProperty(value = "typeProperties.filePaths", required = true)
    private List<Object> filePaths;

    /**
     * Linked service reference where the files are located.
     */
    @JsonProperty(value = "typeProperties.fileLinkedService")
    private LinkedServiceReference fileLinkedService;

    /**
     * Combiner executable name. Type: string (or Expression with resultType
     * string).
     */
    @JsonProperty(value = "typeProperties.combiner")
    private Object combiner;

    /**
     * Command line environment values.
     */
    @JsonProperty(value = "typeProperties.commandEnvironment")
    private List<Object> commandEnvironment;

    /**
     * Allows user to specify defines for streaming job request.
     */
    @JsonProperty(value = "typeProperties.defines")
    private Map<String, Object> defines;

    /**
     * Get the storageLinkedServices value.
     *
     * @return the storageLinkedServices value
     */
    public List<LinkedServiceReference> storageLinkedServices() {
        return this.storageLinkedServices;
    }

    /**
     * Set the storageLinkedServices value.
     *
     * @param storageLinkedServices the storageLinkedServices value to set
     * @return the HDInsightStreamingActivity object itself.
     */
    public HDInsightStreamingActivity withStorageLinkedServices(List<LinkedServiceReference> storageLinkedServices) {
        this.storageLinkedServices = storageLinkedServices;
        return this;
    }

    /**
     * Get the arguments value.
     *
     * @return the arguments value
     */
    public List<Object> arguments() {
        return this.arguments;
    }

    /**
     * Set the arguments value.
     *
     * @param arguments the arguments value to set
     * @return the HDInsightStreamingActivity object itself.
     */
    public HDInsightStreamingActivity withArguments(List<Object> arguments) {
        this.arguments = arguments;
        return this;
    }

    /**
     * Get the getDebugInfo value.
     *
     * @return the getDebugInfo value
     */
    public HDInsightActivityDebugInfoOption getDebugInfo() {
        return this.getDebugInfo;
    }

    /**
     * Set the getDebugInfo value.
     *
     * @param getDebugInfo the getDebugInfo value to set
     * @return the HDInsightStreamingActivity object itself.
     */
    public HDInsightStreamingActivity withGetDebugInfo(HDInsightActivityDebugInfoOption getDebugInfo) {
        this.getDebugInfo = getDebugInfo;
        return this;
    }

    /**
     * Get the mapper value.
     *
     * @return the mapper value
     */
    public Object mapper() {
        return this.mapper;
    }

    /**
     * Set the mapper value.
     *
     * @param mapper the mapper value to set
     * @return the HDInsightStreamingActivity object itself.
     */
    public HDInsightStreamingActivity withMapper(Object mapper) {
        this.mapper = mapper;
        return this;
    }

    /**
     * Get the reducer value.
     *
     * @return the reducer value
     */
    public Object reducer() {
        return this.reducer;
    }

    /**
     * Set the reducer value.
     *
     * @param reducer the reducer value to set
     * @return the HDInsightStreamingActivity object itself.
     */
    public HDInsightStreamingActivity withReducer(Object reducer) {
        this.reducer = reducer;
        return this;
    }

    /**
     * Get the input value.
     *
     * @return the input value
     */
    public Object input() {
        return this.input;
    }

    /**
     * Set the input value.
     *
     * @param input the input value to set
     * @return the HDInsightStreamingActivity object itself.
     */
    public HDInsightStreamingActivity withInput(Object input) {
        this.input = input;
        return this;
    }

    /**
     * Get the output value.
     *
     * @return the output value
     */
    public Object output() {
        return this.output;
    }

    /**
     * Set the output value.
     *
     * @param output the output value to set
     * @return the HDInsightStreamingActivity object itself.
     */
    public HDInsightStreamingActivity withOutput(Object output) {
        this.output = output;
        return this;
    }

    /**
     * Get the filePaths value.
     *
     * @return the filePaths value
     */
    public List<Object> filePaths() {
        return this.filePaths;
    }

    /**
     * Set the filePaths value.
     *
     * @param filePaths the filePaths value to set
     * @return the HDInsightStreamingActivity object itself.
     */
    public HDInsightStreamingActivity withFilePaths(List<Object> filePaths) {
        this.filePaths = filePaths;
        return this;
    }

    /**
     * Get the fileLinkedService value.
     *
     * @return the fileLinkedService value
     */
    public LinkedServiceReference fileLinkedService() {
        return this.fileLinkedService;
    }

    /**
     * Set the fileLinkedService value.
     *
     * @param fileLinkedService the fileLinkedService value to set
     * @return the HDInsightStreamingActivity object itself.
     */
    public HDInsightStreamingActivity withFileLinkedService(LinkedServiceReference fileLinkedService) {
        this.fileLinkedService = fileLinkedService;
        return this;
    }

    /**
     * Get the combiner value.
     *
     * @return the combiner value
     */
    public Object combiner() {
        return this.combiner;
    }

    /**
     * Set the combiner value.
     *
     * @param combiner the combiner value to set
     * @return the HDInsightStreamingActivity object itself.
     */
    public HDInsightStreamingActivity withCombiner(Object combiner) {
        this.combiner = combiner;
        return this;
    }

    /**
     * Get the commandEnvironment value.
     *
     * @return the commandEnvironment value
     */
    public List<Object> commandEnvironment() {
        return this.commandEnvironment;
    }

    /**
     * Set the commandEnvironment value.
     *
     * @param commandEnvironment the commandEnvironment value to set
     * @return the HDInsightStreamingActivity object itself.
     */
    public HDInsightStreamingActivity withCommandEnvironment(List<Object> commandEnvironment) {
        this.commandEnvironment = commandEnvironment;
        return this;
    }

    /**
     * Get the defines value.
     *
     * @return the defines value
     */
    public Map<String, Object> defines() {
        return this.defines;
    }

    /**
     * Set the defines value.
     *
     * @param defines the defines value to set
     * @return the HDInsightStreamingActivity object itself.
     */
    public HDInsightStreamingActivity withDefines(Map<String, Object> defines) {
        this.defines = defines;
        return this;
    }

}
