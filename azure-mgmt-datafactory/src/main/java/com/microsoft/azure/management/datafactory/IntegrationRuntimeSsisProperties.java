/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.datafactory;

import java.util.Map;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * SSIS properties for managed integration runtime.
 */
public class IntegrationRuntimeSsisProperties {
    /**
     * Unmatched properties from the message are deserialized this collection.
     */
    @JsonProperty(value = "")
    private Map<String, Object> additionalProperties;

    /**
     * Catalog information for managed dedicated integration runtime.
     */
    @JsonProperty(value = "catalogInfo")
    private IntegrationRuntimeSsisCatalogInfo catalogInfo;

    /**
     * License type for bringing your own license scenario. Possible values
     * include: 'BasePrice', 'LicenseIncluded'.
     */
    @JsonProperty(value = "licenseType")
    private IntegrationRuntimeLicenseType licenseType;

    /**
     * Custom setup script properties for a managed dedicated integration
     * runtime.
     */
    @JsonProperty(value = "customSetupScriptProperties")
    private IntegrationRuntimeCustomSetupScriptProperties customSetupScriptProperties;

    /**
     * The edition for the SSIS Integration Runtime. Possible values include:
     * 'Standard', 'Enterprise'.
     */
    @JsonProperty(value = "edition")
    private IntegrationRuntimeEdition edition;

    /**
     * Get the additionalProperties value.
     *
     * @return the additionalProperties value
     */
    public Map<String, Object> additionalProperties() {
        return this.additionalProperties;
    }

    /**
     * Set the additionalProperties value.
     *
     * @param additionalProperties the additionalProperties value to set
     * @return the IntegrationRuntimeSsisProperties object itself.
     */
    public IntegrationRuntimeSsisProperties withAdditionalProperties(Map<String, Object> additionalProperties) {
        this.additionalProperties = additionalProperties;
        return this;
    }

    /**
     * Get the catalogInfo value.
     *
     * @return the catalogInfo value
     */
    public IntegrationRuntimeSsisCatalogInfo catalogInfo() {
        return this.catalogInfo;
    }

    /**
     * Set the catalogInfo value.
     *
     * @param catalogInfo the catalogInfo value to set
     * @return the IntegrationRuntimeSsisProperties object itself.
     */
    public IntegrationRuntimeSsisProperties withCatalogInfo(IntegrationRuntimeSsisCatalogInfo catalogInfo) {
        this.catalogInfo = catalogInfo;
        return this;
    }

    /**
     * Get the licenseType value.
     *
     * @return the licenseType value
     */
    public IntegrationRuntimeLicenseType licenseType() {
        return this.licenseType;
    }

    /**
     * Set the licenseType value.
     *
     * @param licenseType the licenseType value to set
     * @return the IntegrationRuntimeSsisProperties object itself.
     */
    public IntegrationRuntimeSsisProperties withLicenseType(IntegrationRuntimeLicenseType licenseType) {
        this.licenseType = licenseType;
        return this;
    }

    /**
     * Get the customSetupScriptProperties value.
     *
     * @return the customSetupScriptProperties value
     */
    public IntegrationRuntimeCustomSetupScriptProperties customSetupScriptProperties() {
        return this.customSetupScriptProperties;
    }

    /**
     * Set the customSetupScriptProperties value.
     *
     * @param customSetupScriptProperties the customSetupScriptProperties value to set
     * @return the IntegrationRuntimeSsisProperties object itself.
     */
    public IntegrationRuntimeSsisProperties withCustomSetupScriptProperties(IntegrationRuntimeCustomSetupScriptProperties customSetupScriptProperties) {
        this.customSetupScriptProperties = customSetupScriptProperties;
        return this;
    }

    /**
     * Get the edition value.
     *
     * @return the edition value
     */
    public IntegrationRuntimeEdition edition() {
        return this.edition;
    }

    /**
     * Set the edition value.
     *
     * @param edition the edition value to set
     * @return the IntegrationRuntimeSsisProperties object itself.
     */
    public IntegrationRuntimeSsisProperties withEdition(IntegrationRuntimeEdition edition) {
        this.edition = edition;
        return this;
    }

}
