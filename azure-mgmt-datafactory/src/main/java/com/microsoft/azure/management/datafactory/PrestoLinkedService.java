/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.datafactory;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.microsoft.rest.serializer.JsonFlatten;
import com.microsoft.azure.management.datafactory.implementation.LinkedServiceInner;

/**
 * Presto server linked service.
 */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "type")
@JsonTypeName("Presto")
@JsonFlatten
public class PrestoLinkedService extends LinkedServiceInner {
    /**
     * The IP address or host name of the Presto server. (i.e.
     * 192.168.222.160).
     */
    @JsonProperty(value = "typeProperties.host", required = true)
    private Object host;

    /**
     * The version of the Presto server. (i.e. 0.148-t).
     */
    @JsonProperty(value = "typeProperties.serverVersion", required = true)
    private Object serverVersion;

    /**
     * The catalog context for all request against the server.
     */
    @JsonProperty(value = "typeProperties.catalog", required = true)
    private Object catalog;

    /**
     * The TCP port that the Presto server uses to listen for client
     * connections. The default value is 8080.
     */
    @JsonProperty(value = "typeProperties.port")
    private Object port;

    /**
     * The authentication mechanism used to connect to the Presto server.
     * Possible values include: 'Anonymous', 'LDAP'.
     */
    @JsonProperty(value = "typeProperties.authenticationType", required = true)
    private PrestoAuthenticationType authenticationType;

    /**
     * The user name used to connect to the Presto server.
     */
    @JsonProperty(value = "typeProperties.username")
    private Object username;

    /**
     * The password corresponding to the user name.
     */
    @JsonProperty(value = "typeProperties.password")
    private SecretBase password;

    /**
     * Specifies whether the connections to the server are encrypted using SSL.
     * The default value is false.
     */
    @JsonProperty(value = "typeProperties.enableSsl")
    private Object enableSsl;

    /**
     * The full path of the .pem file containing trusted CA certificates for
     * verifying the server when connecting over SSL. This property can only be
     * set when using SSL on self-hosted IR. The default value is the
     * cacerts.pem file installed with the IR.
     */
    @JsonProperty(value = "typeProperties.trustedCertPath")
    private Object trustedCertPath;

    /**
     * Specifies whether to use a CA certificate from the system trust store or
     * from a specified PEM file. The default value is false.
     */
    @JsonProperty(value = "typeProperties.useSystemTrustStore")
    private Object useSystemTrustStore;

    /**
     * Specifies whether to require a CA-issued SSL certificate name to match
     * the host name of the server when connecting over SSL. The default value
     * is false.
     */
    @JsonProperty(value = "typeProperties.allowHostNameCNMismatch")
    private Object allowHostNameCNMismatch;

    /**
     * Specifies whether to allow self-signed certificates from the server. The
     * default value is false.
     */
    @JsonProperty(value = "typeProperties.allowSelfSignedServerCert")
    private Object allowSelfSignedServerCert;

    /**
     * The local time zone used by the connection. Valid values for this option
     * are specified in the IANA Time Zone Database. The default value is the
     * system time zone.
     */
    @JsonProperty(value = "typeProperties.timeZoneID")
    private Object timeZoneID;

    /**
     * The encrypted credential used for authentication. Credentials are
     * encrypted using the integration runtime credential manager. Type: string
     * (or Expression with resultType string).
     */
    @JsonProperty(value = "typeProperties.encryptedCredential")
    private Object encryptedCredential;

    /**
     * Get the host value.
     *
     * @return the host value
     */
    public Object host() {
        return this.host;
    }

    /**
     * Set the host value.
     *
     * @param host the host value to set
     * @return the PrestoLinkedService object itself.
     */
    public PrestoLinkedService withHost(Object host) {
        this.host = host;
        return this;
    }

    /**
     * Get the serverVersion value.
     *
     * @return the serverVersion value
     */
    public Object serverVersion() {
        return this.serverVersion;
    }

    /**
     * Set the serverVersion value.
     *
     * @param serverVersion the serverVersion value to set
     * @return the PrestoLinkedService object itself.
     */
    public PrestoLinkedService withServerVersion(Object serverVersion) {
        this.serverVersion = serverVersion;
        return this;
    }

    /**
     * Get the catalog value.
     *
     * @return the catalog value
     */
    public Object catalog() {
        return this.catalog;
    }

    /**
     * Set the catalog value.
     *
     * @param catalog the catalog value to set
     * @return the PrestoLinkedService object itself.
     */
    public PrestoLinkedService withCatalog(Object catalog) {
        this.catalog = catalog;
        return this;
    }

    /**
     * Get the port value.
     *
     * @return the port value
     */
    public Object port() {
        return this.port;
    }

    /**
     * Set the port value.
     *
     * @param port the port value to set
     * @return the PrestoLinkedService object itself.
     */
    public PrestoLinkedService withPort(Object port) {
        this.port = port;
        return this;
    }

    /**
     * Get the authenticationType value.
     *
     * @return the authenticationType value
     */
    public PrestoAuthenticationType authenticationType() {
        return this.authenticationType;
    }

    /**
     * Set the authenticationType value.
     *
     * @param authenticationType the authenticationType value to set
     * @return the PrestoLinkedService object itself.
     */
    public PrestoLinkedService withAuthenticationType(PrestoAuthenticationType authenticationType) {
        this.authenticationType = authenticationType;
        return this;
    }

    /**
     * Get the username value.
     *
     * @return the username value
     */
    public Object username() {
        return this.username;
    }

    /**
     * Set the username value.
     *
     * @param username the username value to set
     * @return the PrestoLinkedService object itself.
     */
    public PrestoLinkedService withUsername(Object username) {
        this.username = username;
        return this;
    }

    /**
     * Get the password value.
     *
     * @return the password value
     */
    public SecretBase password() {
        return this.password;
    }

    /**
     * Set the password value.
     *
     * @param password the password value to set
     * @return the PrestoLinkedService object itself.
     */
    public PrestoLinkedService withPassword(SecretBase password) {
        this.password = password;
        return this;
    }

    /**
     * Get the enableSsl value.
     *
     * @return the enableSsl value
     */
    public Object enableSsl() {
        return this.enableSsl;
    }

    /**
     * Set the enableSsl value.
     *
     * @param enableSsl the enableSsl value to set
     * @return the PrestoLinkedService object itself.
     */
    public PrestoLinkedService withEnableSsl(Object enableSsl) {
        this.enableSsl = enableSsl;
        return this;
    }

    /**
     * Get the trustedCertPath value.
     *
     * @return the trustedCertPath value
     */
    public Object trustedCertPath() {
        return this.trustedCertPath;
    }

    /**
     * Set the trustedCertPath value.
     *
     * @param trustedCertPath the trustedCertPath value to set
     * @return the PrestoLinkedService object itself.
     */
    public PrestoLinkedService withTrustedCertPath(Object trustedCertPath) {
        this.trustedCertPath = trustedCertPath;
        return this;
    }

    /**
     * Get the useSystemTrustStore value.
     *
     * @return the useSystemTrustStore value
     */
    public Object useSystemTrustStore() {
        return this.useSystemTrustStore;
    }

    /**
     * Set the useSystemTrustStore value.
     *
     * @param useSystemTrustStore the useSystemTrustStore value to set
     * @return the PrestoLinkedService object itself.
     */
    public PrestoLinkedService withUseSystemTrustStore(Object useSystemTrustStore) {
        this.useSystemTrustStore = useSystemTrustStore;
        return this;
    }

    /**
     * Get the allowHostNameCNMismatch value.
     *
     * @return the allowHostNameCNMismatch value
     */
    public Object allowHostNameCNMismatch() {
        return this.allowHostNameCNMismatch;
    }

    /**
     * Set the allowHostNameCNMismatch value.
     *
     * @param allowHostNameCNMismatch the allowHostNameCNMismatch value to set
     * @return the PrestoLinkedService object itself.
     */
    public PrestoLinkedService withAllowHostNameCNMismatch(Object allowHostNameCNMismatch) {
        this.allowHostNameCNMismatch = allowHostNameCNMismatch;
        return this;
    }

    /**
     * Get the allowSelfSignedServerCert value.
     *
     * @return the allowSelfSignedServerCert value
     */
    public Object allowSelfSignedServerCert() {
        return this.allowSelfSignedServerCert;
    }

    /**
     * Set the allowSelfSignedServerCert value.
     *
     * @param allowSelfSignedServerCert the allowSelfSignedServerCert value to set
     * @return the PrestoLinkedService object itself.
     */
    public PrestoLinkedService withAllowSelfSignedServerCert(Object allowSelfSignedServerCert) {
        this.allowSelfSignedServerCert = allowSelfSignedServerCert;
        return this;
    }

    /**
     * Get the timeZoneID value.
     *
     * @return the timeZoneID value
     */
    public Object timeZoneID() {
        return this.timeZoneID;
    }

    /**
     * Set the timeZoneID value.
     *
     * @param timeZoneID the timeZoneID value to set
     * @return the PrestoLinkedService object itself.
     */
    public PrestoLinkedService withTimeZoneID(Object timeZoneID) {
        this.timeZoneID = timeZoneID;
        return this;
    }

    /**
     * Get the encryptedCredential value.
     *
     * @return the encryptedCredential value
     */
    public Object encryptedCredential() {
        return this.encryptedCredential;
    }

    /**
     * Set the encryptedCredential value.
     *
     * @param encryptedCredential the encryptedCredential value to set
     * @return the PrestoLinkedService object itself.
     */
    public PrestoLinkedService withEncryptedCredential(Object encryptedCredential) {
        this.encryptedCredential = encryptedCredential;
        return this;
    }

}
