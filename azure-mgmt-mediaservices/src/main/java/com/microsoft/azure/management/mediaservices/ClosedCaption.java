/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.mediaservices;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * An object to represent closed caption encoding.
 */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "@odata.type")
@JsonTypeName("#Microsoft.Media.ClosedCaption")
public class ClosedCaption extends Codec {
    /**
     * Gets or sets the source of the closed caption file It can be empty in
     * the case the closed caption is from the ClosedCaptionStream selection in
     * the source. If it present (side-car input), it has higher priority than
     * the ClosedCaptionStream from the source.
     */
    @JsonProperty(value = "inputFile")
    private String inputFile;

    /**
     * Gets or sets the closed caption output type. Possible values include:
     * 'SideCar', 'Stream', 'Embedded'.
     */
    @JsonProperty(value = "outputType", required = true)
    private ClosedCaptionType outputType;

    /**
     * Gets or sets the Closed Caption output format. Possible values include:
     * 'Ttml', 'WebVtt'.
     */
    @JsonProperty(value = "format", required = true)
    private ClosedCaptionFormat format;

    /**
     * Get the inputFile value.
     *
     * @return the inputFile value
     */
    public String inputFile() {
        return this.inputFile;
    }

    /**
     * Set the inputFile value.
     *
     * @param inputFile the inputFile value to set
     * @return the ClosedCaption object itself.
     */
    public ClosedCaption withInputFile(String inputFile) {
        this.inputFile = inputFile;
        return this;
    }

    /**
     * Get the outputType value.
     *
     * @return the outputType value
     */
    public ClosedCaptionType outputType() {
        return this.outputType;
    }

    /**
     * Set the outputType value.
     *
     * @param outputType the outputType value to set
     * @return the ClosedCaption object itself.
     */
    public ClosedCaption withOutputType(ClosedCaptionType outputType) {
        this.outputType = outputType;
        return this;
    }

    /**
     * Get the format value.
     *
     * @return the format value
     */
    public ClosedCaptionFormat format() {
        return this.format;
    }

    /**
     * Set the format value.
     *
     * @param format the format value to set
     * @return the ClosedCaption object itself.
     */
    public ClosedCaption withFormat(ClosedCaptionFormat format) {
        this.format = format;
        return this;
    }

}
