/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.mediaservices;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * An object to represent EAC3 audio encoding settings.
 */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "@odata.type")
@JsonTypeName("#Microsoft.Media.DDPlusAudio")
public class DDPlusAudio extends Audio {
    /**
     * Gets or sets a value indicating whether "LFE" is on.
     */
    @JsonProperty(value = "lfEon", required = true)
    private boolean lfEon;

    /**
     * Gets or sets the AC mode. Possible values include: 'ACMOD20', 'ACMOD32'.
     */
    @JsonProperty(value = "acMode", required = true)
    private DDPlusACMode acMode;

    /**
     * Get the lfEon value.
     *
     * @return the lfEon value
     */
    public boolean lfEon() {
        return this.lfEon;
    }

    /**
     * Set the lfEon value.
     *
     * @param lfEon the lfEon value to set
     * @return the DDPlusAudio object itself.
     */
    public DDPlusAudio withLfEon(boolean lfEon) {
        this.lfEon = lfEon;
        return this;
    }

    /**
     * Get the acMode value.
     *
     * @return the acMode value
     */
    public DDPlusACMode acMode() {
        return this.acMode;
    }

    /**
     * Set the acMode value.
     *
     * @param acMode the acMode value to set
     * @return the DDPlusAudio object itself.
     */
    public DDPlusAudio withAcMode(DDPlusACMode acMode) {
        this.acMode = acMode;
        return this;
    }

}
