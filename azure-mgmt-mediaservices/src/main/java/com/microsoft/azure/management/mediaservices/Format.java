/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.mediaservices;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonSubTypes;

/**
 * Base class for output.
 */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "@odata.type")
@JsonTypeName("Format")
@JsonSubTypes({
    @JsonSubTypes.Type(name = "#Microsoft.Media.MultiBitrateFormat", value = MultiBitrateFormat.class),
    @JsonSubTypes.Type(name = "#Microsoft.Media.ImageFormat", value = ImageFormat.class),
    @JsonSubTypes.Type(name = "#Microsoft.Media.Mp4Format", value = Mp4Format.class)
})
public class Format {
    /**
     * Gets or sets the pattern of the filename to use excluding the extension.
     * REVIEW: List "macros" that can be used and give examples.
     */
    @JsonProperty(value = "filenamePattern")
    private String filenamePattern;

    /**
     * Get the filenamePattern value.
     *
     * @return the filenamePattern value
     */
    public String filenamePattern() {
        return this.filenamePattern;
    }

    /**
     * Set the filenamePattern value.
     *
     * @param filenamePattern the filenamePattern value to set
     * @return the Format object itself.
     */
    public Format withFilenamePattern(String filenamePattern) {
        this.filenamePattern = filenamePattern;
        return this;
    }

}
