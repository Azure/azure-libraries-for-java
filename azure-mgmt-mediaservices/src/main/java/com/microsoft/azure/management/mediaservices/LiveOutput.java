/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.mediaservices;

import com.microsoft.azure.management.resources.fluentcore.model.HasInner;
import com.microsoft.azure.management.mediaservices.implementation.LiveOutputInner;
import com.microsoft.azure.management.resources.fluentcore.model.Indexable;
import com.microsoft.azure.management.resources.fluentcore.model.Refreshable;
import com.microsoft.azure.management.resources.fluentcore.model.Updatable;
import com.microsoft.azure.management.resources.fluentcore.model.Appliable;
import com.microsoft.azure.management.resources.fluentcore.model.Creatable;
import com.microsoft.azure.management.resources.fluentcore.arm.models.HasManager;
import com.microsoft.azure.management.mediaservices.implementation.MediaManager;
import org.joda.time.Period;
import org.joda.time.DateTime;

/**
 * Type representing LiveOutput.
 */
public interface LiveOutput extends HasInner<LiveOutputInner>, Indexable, Refreshable<LiveOutput>, Updatable<LiveOutput.Update>, HasManager<MediaManager> {
    /**
     * @return the archiveWindowLength value.
     */
    Period archiveWindowLength();

    /**
     * @return the assetName value.
     */
    String assetName();

    /**
     * @return the created value.
     */
    DateTime created();

    /**
     * @return the description value.
     */
    String description();

    /**
     * @return the hls value.
     */
    Hls hls();

    /**
     * @return the id value.
     */
    String id();

    /**
     * @return the lastModified value.
     */
    DateTime lastModified();

    /**
     * @return the manifestName value.
     */
    String manifestName();

    /**
     * @return the name value.
     */
    String name();

    /**
     * @return the outputSnapTime value.
     */
    Long outputSnapTime();

    /**
     * @return the provisioningState value.
     */
    String provisioningState();

    /**
     * @return the resourceState value.
     */
    LiveOutputResourceState resourceState();

    /**
     * @return the type value.
     */
    String type();

    /**
     * The entirety of the LiveOutput definition.
     */
    interface Definition extends DefinitionStages.Blank, DefinitionStages.WithLiveEvent, DefinitionStages.WithCreate {
    }

    /**
     * Grouping of LiveOutput definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of a LiveOutput definition.
         */
        interface Blank extends WithLiveEvent {
        }

        /**
         * The stage of the  definition allowing to specify LiveEvent.
         */
        interface WithLiveEvent {
           /**
            * Specifies resourceGroupName, accountName, liveEventName.
            */
            WithCreate withExistingLiveEvent(String resourceGroupName, String accountName, String liveEventName);
        }

        /**
         * The stage of the  update allowing to specify ArchiveWindowLength.
         */
        interface WithArchiveWindowLength {
            /**
             * Specifies archiveWindowLength.
             */
            WithCreate withArchiveWindowLength(Period archiveWindowLength);
        }

        /**
         * The stage of the  update allowing to specify AssetName.
         */
        interface WithAssetName {
            /**
             * Specifies assetName.
             */
            WithCreate withAssetName(String assetName);
        }

        /**
         * The stage of the  update allowing to specify Description.
         */
        interface WithDescription {
            /**
             * Specifies description.
             */
            WithCreate withDescription(String description);
        }

        /**
         * The stage of the  update allowing to specify Hls.
         */
        interface WithHls {
            /**
             * Specifies hls.
             */
            WithCreate withHls(Hls hls);
        }

        /**
         * The stage of the  update allowing to specify ManifestName.
         */
        interface WithManifestName {
            /**
             * Specifies manifestName.
             */
            WithCreate withManifestName(String manifestName);
        }

        /**
         * The stage of the  update allowing to specify OutputSnapTime.
         */
        interface WithOutputSnapTime {
            /**
             * Specifies outputSnapTime.
             */
            WithCreate withOutputSnapTime(Long outputSnapTime);
        }

        /**
         * The stage of the definition which contains all the minimum required inputs for
         * the resource to be created (via {@link WithCreate#create()}), but also allows
         * for any other optional settings to be specified.
         */
        interface WithCreate extends Creatable<LiveOutput>, DefinitionStages.WithArchiveWindowLength, DefinitionStages.WithAssetName, DefinitionStages.WithDescription, DefinitionStages.WithHls, DefinitionStages.WithManifestName, DefinitionStages.WithOutputSnapTime {
        }
    }
    /**
     * The template for a LiveOutput update operation, containing all the settings that can be modified.
     */
    interface Update extends Appliable<LiveOutput>, UpdateStages.WithArchiveWindowLength, UpdateStages.WithAssetName, UpdateStages.WithDescription, UpdateStages.WithHls, UpdateStages.WithManifestName, UpdateStages.WithOutputSnapTime {
    }

    /**
     * Grouping of LiveOutput update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the  {0} allowing to specify ArchiveWindowLength.
         */
        interface WithArchiveWindowLength {
            /**
             * Specifies archiveWindowLength.
             */
            Update withArchiveWindowLength(Period archiveWindowLength);
        }

        /**
         * The stage of the  {0} allowing to specify AssetName.
         */
        interface WithAssetName {
            /**
             * Specifies assetName.
             */
            Update withAssetName(String assetName);
        }

        /**
         * The stage of the  {0} allowing to specify Description.
         */
        interface WithDescription {
            /**
             * Specifies description.
             */
            Update withDescription(String description);
        }

        /**
         * The stage of the  {0} allowing to specify Hls.
         */
        interface WithHls {
            /**
             * Specifies hls.
             */
            Update withHls(Hls hls);
        }

        /**
         * The stage of the  {0} allowing to specify ManifestName.
         */
        interface WithManifestName {
            /**
             * Specifies manifestName.
             */
            Update withManifestName(String manifestName);
        }

        /**
         * The stage of the  {0} allowing to specify OutputSnapTime.
         */
        interface WithOutputSnapTime {
            /**
             * Specifies outputSnapTime.
             */
            Update withOutputSnapTime(Long outputSnapTime);
        }

    }
}
