/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.mediaservices;

import java.util.List;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonSubTypes;

/**
 * GOP aligned multi bitrate output.
 */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "@odata.type")
@JsonTypeName("#Microsoft.Media.MultiBitrateFormat")
@JsonSubTypes({
    @JsonSubTypes.Type(name = "#Microsoft.Media.CmafFormat", value = CmafFormat.class),
    @JsonSubTypes.Type(name = "#Microsoft.Media.MultiBitrateMp4Format", value = MultiBitrateMp4Format.class),
    @JsonSubTypes.Type(name = "#Microsoft.Media.TransportStreamFormat", value = TransportStreamFormat.class)
})
public class MultiBitrateFormat extends Format {
    /**
     * Gets or sets the pattern of the manifest file name to use excluding the
     * extension. REVIEW: List "macros" that can be used and give examples.
     */
    @JsonProperty(value = "manifestFilename")
    private String manifestFilename;

    /**
     * Gets the list of output files.
     */
    @JsonProperty(value = "outputFiles")
    private List<OutputFile> outputFiles;

    /**
     * Get the manifestFilename value.
     *
     * @return the manifestFilename value
     */
    public String manifestFilename() {
        return this.manifestFilename;
    }

    /**
     * Set the manifestFilename value.
     *
     * @param manifestFilename the manifestFilename value to set
     * @return the MultiBitrateFormat object itself.
     */
    public MultiBitrateFormat withManifestFilename(String manifestFilename) {
        this.manifestFilename = manifestFilename;
        return this;
    }

    /**
     * Get the outputFiles value.
     *
     * @return the outputFiles value
     */
    public List<OutputFile> outputFiles() {
        return this.outputFiles;
    }

    /**
     * Set the outputFiles value.
     *
     * @param outputFiles the outputFiles value to set
     * @return the MultiBitrateFormat object itself.
     */
    public MultiBitrateFormat withOutputFiles(List<OutputFile> outputFiles) {
        this.outputFiles = outputFiles;
        return this;
    }

}
