/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.mediaservices;

import org.joda.time.Period;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonSubTypes;

/**
 * Base type for all overlays.
 */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "@odata.type")
@JsonTypeName("Overlay")
@JsonSubTypes({
    @JsonSubTypes.Type(name = "#Microsoft.Media.AudioOverlay", value = AudioOverlay.class),
    @JsonSubTypes.Type(name = "#Microsoft.Media.VideoOverlay", value = VideoOverlay.class)
})
public class Overlay {
    /**
     * Gets or sets the label of the Input used for the Overlay.   The Input
     * must specify exactly one file to use.
     */
    @JsonProperty(value = "inputLabel")
    private String inputLabel;

    /**
     * Gets or sets a value indicating whether the overlay is looped to match
     * the duration of the input media.
     */
    @JsonProperty(value = "inputLoop")
    private Boolean inputLoop;

    /**
     * Gets or sets the duration in the video at which the overlay starts. This
     * is relative to the clip start if one is specified in a job. Default is
     * from the beginning of the video.
     */
    @JsonProperty(value = "start")
    private Period start;

    /**
     * Gets or sets the duration in the video at which the overlay ends.  This
     * is relative to the clip start if specified in a job. Default is till the
     * end of the video if InputLoop is  true. else the duration of the
     * overlay.
     */
    @JsonProperty(value = "end")
    private Period end;

    /**
     * Gets or sets the duration for how long the fade in happens. Default is
     * no fade in.
     */
    @JsonProperty(value = "fadeInDuration")
    private Period fadeInDuration;

    /**
     * Gets or sets the duration for how long the fade out happens. Default is
     * no fade out.
     */
    @JsonProperty(value = "fadeOutDuration")
    private Period fadeOutDuration;

    /**
     * Gets or sets the gain level of audio in the overlay. Defaults to a value
     * of 1.0.
     */
    @JsonProperty(value = "audioGainLevel")
    private Double audioGainLevel;

    /**
     * Get the inputLabel value.
     *
     * @return the inputLabel value
     */
    public String inputLabel() {
        return this.inputLabel;
    }

    /**
     * Set the inputLabel value.
     *
     * @param inputLabel the inputLabel value to set
     * @return the Overlay object itself.
     */
    public Overlay withInputLabel(String inputLabel) {
        this.inputLabel = inputLabel;
        return this;
    }

    /**
     * Get the inputLoop value.
     *
     * @return the inputLoop value
     */
    public Boolean inputLoop() {
        return this.inputLoop;
    }

    /**
     * Set the inputLoop value.
     *
     * @param inputLoop the inputLoop value to set
     * @return the Overlay object itself.
     */
    public Overlay withInputLoop(Boolean inputLoop) {
        this.inputLoop = inputLoop;
        return this;
    }

    /**
     * Get the start value.
     *
     * @return the start value
     */
    public Period start() {
        return this.start;
    }

    /**
     * Set the start value.
     *
     * @param start the start value to set
     * @return the Overlay object itself.
     */
    public Overlay withStart(Period start) {
        this.start = start;
        return this;
    }

    /**
     * Get the end value.
     *
     * @return the end value
     */
    public Period end() {
        return this.end;
    }

    /**
     * Set the end value.
     *
     * @param end the end value to set
     * @return the Overlay object itself.
     */
    public Overlay withEnd(Period end) {
        this.end = end;
        return this;
    }

    /**
     * Get the fadeInDuration value.
     *
     * @return the fadeInDuration value
     */
    public Period fadeInDuration() {
        return this.fadeInDuration;
    }

    /**
     * Set the fadeInDuration value.
     *
     * @param fadeInDuration the fadeInDuration value to set
     * @return the Overlay object itself.
     */
    public Overlay withFadeInDuration(Period fadeInDuration) {
        this.fadeInDuration = fadeInDuration;
        return this;
    }

    /**
     * Get the fadeOutDuration value.
     *
     * @return the fadeOutDuration value
     */
    public Period fadeOutDuration() {
        return this.fadeOutDuration;
    }

    /**
     * Set the fadeOutDuration value.
     *
     * @param fadeOutDuration the fadeOutDuration value to set
     * @return the Overlay object itself.
     */
    public Overlay withFadeOutDuration(Period fadeOutDuration) {
        this.fadeOutDuration = fadeOutDuration;
        return this;
    }

    /**
     * Get the audioGainLevel value.
     *
     * @return the audioGainLevel value
     */
    public Double audioGainLevel() {
        return this.audioGainLevel;
    }

    /**
     * Set the audioGainLevel value.
     *
     * @param audioGainLevel the audioGainLevel value to set
     * @return the Overlay object itself.
     */
    public Overlay withAudioGainLevel(Double audioGainLevel) {
        this.audioGainLevel = audioGainLevel;
        return this;
    }

}
