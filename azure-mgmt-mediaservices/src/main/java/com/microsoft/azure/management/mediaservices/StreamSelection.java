/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.mediaservices;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonSubTypes;

/**
 * An object to represent stream selection.
 */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "@odata.type")
@JsonTypeName("StreamSelection")
@JsonSubTypes({
    @JsonSubTypes.Type(name = "#Microsoft.Media.ClosedCaptionStream", value = ClosedCaptionStream.class),
    @JsonSubTypes.Type(name = "#Microsoft.Media.VideoStream", value = VideoStream.class),
    @JsonSubTypes.Type(name = "#Microsoft.Media.AudioStream", value = AudioStream.class)
})
public class StreamSelection {
    /**
     * Gets the file index where the stream is present.
     */
    @JsonProperty(value = "fileIndex", required = true)
    private int fileIndex;

    /**
     * Gets the stream index.
     */
    @JsonProperty(value = "streamIndex", required = true)
    private int streamIndex;

    /**
     * Gets a value indicating whether the stream index is absolute or relative
     * to the stream type.
     */
    @JsonProperty(value = "isAbsoluteStreamIndex")
    private Boolean isAbsoluteStreamIndex;

    /**
     * Gets the stream selection mode. Possible values include:
     * 'SelectionNotSet', 'SelectHighestBitrateStream',
     * 'SelectLowestBitrateStream', 'SelectAllStreams'.
     */
    @JsonProperty(value = "streamSelectionMode")
    private StreamSelectionMode streamSelectionMode;

    /**
     * Get the fileIndex value.
     *
     * @return the fileIndex value
     */
    public int fileIndex() {
        return this.fileIndex;
    }

    /**
     * Set the fileIndex value.
     *
     * @param fileIndex the fileIndex value to set
     * @return the StreamSelection object itself.
     */
    public StreamSelection withFileIndex(int fileIndex) {
        this.fileIndex = fileIndex;
        return this;
    }

    /**
     * Get the streamIndex value.
     *
     * @return the streamIndex value
     */
    public int streamIndex() {
        return this.streamIndex;
    }

    /**
     * Set the streamIndex value.
     *
     * @param streamIndex the streamIndex value to set
     * @return the StreamSelection object itself.
     */
    public StreamSelection withStreamIndex(int streamIndex) {
        this.streamIndex = streamIndex;
        return this;
    }

    /**
     * Get the isAbsoluteStreamIndex value.
     *
     * @return the isAbsoluteStreamIndex value
     */
    public Boolean isAbsoluteStreamIndex() {
        return this.isAbsoluteStreamIndex;
    }

    /**
     * Set the isAbsoluteStreamIndex value.
     *
     * @param isAbsoluteStreamIndex the isAbsoluteStreamIndex value to set
     * @return the StreamSelection object itself.
     */
    public StreamSelection withIsAbsoluteStreamIndex(Boolean isAbsoluteStreamIndex) {
        this.isAbsoluteStreamIndex = isAbsoluteStreamIndex;
        return this;
    }

    /**
     * Get the streamSelectionMode value.
     *
     * @return the streamSelectionMode value
     */
    public StreamSelectionMode streamSelectionMode() {
        return this.streamSelectionMode;
    }

    /**
     * Set the streamSelectionMode value.
     *
     * @param streamSelectionMode the streamSelectionMode value to set
     * @return the StreamSelection object itself.
     */
    public StreamSelection withStreamSelectionMode(StreamSelectionMode streamSelectionMode) {
        this.streamSelectionMode = streamSelectionMode;
        return this;
    }

}
