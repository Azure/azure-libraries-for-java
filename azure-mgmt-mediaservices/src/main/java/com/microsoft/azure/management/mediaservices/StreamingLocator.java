/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.mediaservices;

import com.microsoft.azure.management.resources.fluentcore.model.HasInner;
import com.microsoft.azure.management.mediaservices.implementation.StreamingLocatorInner;
import com.microsoft.azure.management.resources.fluentcore.model.Indexable;
import com.microsoft.azure.management.resources.fluentcore.model.Refreshable;
import com.microsoft.azure.management.resources.fluentcore.model.Updatable;
import com.microsoft.azure.management.resources.fluentcore.model.Appliable;
import com.microsoft.azure.management.resources.fluentcore.model.Creatable;
import com.microsoft.azure.management.resources.fluentcore.arm.models.HasManager;
import com.microsoft.azure.management.mediaservices.implementation.MediaManager;
import org.joda.time.DateTime;
import java.util.UUID;
import java.util.List;

/**
 * Type representing StreamingLocator.
 */
public interface StreamingLocator extends HasInner<StreamingLocatorInner>, Indexable, Refreshable<StreamingLocator>, Updatable<StreamingLocator.Update>, HasManager<MediaManager> {
    /**
     * @return the assetName value.
     */
    String assetName();

    /**
     * @return the contentKeys value.
     */
    List<StreamingLocatorUserDefinedContentKey> contentKeys();

    /**
     * @return the created value.
     */
    DateTime created();

    /**
     * @return the defaultContentKeyPolicyName value.
     */
    String defaultContentKeyPolicyName();

    /**
     * @return the endTime value.
     */
    DateTime endTime();

    /**
     * @return the id value.
     */
    String id();

    /**
     * @return the name value.
     */
    String name();

    /**
     * @return the startTime value.
     */
    DateTime startTime();

    /**
     * @return the streamingLocatorId value.
     */
    UUID streamingLocatorId();

    /**
     * @return the streamingPolicyName value.
     */
    String streamingPolicyName();

    /**
     * @return the type value.
     */
    String type();

    /**
     * The entirety of the StreamingLocator definition.
     */
    interface Definition extends DefinitionStages.Blank, DefinitionStages.WithMediaservice, DefinitionStages.WithCreate {
    }

    /**
     * Grouping of StreamingLocator definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of a StreamingLocator definition.
         */
        interface Blank extends WithMediaservice {
        }

        /**
         * The stage of the  definition allowing to specify Mediaservice.
         */
        interface WithMediaservice {
           /**
            * Specifies resourceGroupName, accountName.
            */
            WithCreate withExistingMediaservice(String resourceGroupName, String accountName);
        }

        /**
         * The stage of the  update allowing to specify AssetName.
         */
        interface WithAssetName {
            /**
             * Specifies assetName.
             */
            WithCreate withAssetName(String assetName);
        }

        /**
         * The stage of the  update allowing to specify ContentKeys.
         */
        interface WithContentKeys {
            /**
             * Specifies contentKeys.
             */
            WithCreate withContentKeys(List<StreamingLocatorUserDefinedContentKey> contentKeys);
        }

        /**
         * The stage of the  update allowing to specify DefaultContentKeyPolicyName.
         */
        interface WithDefaultContentKeyPolicyName {
            /**
             * Specifies defaultContentKeyPolicyName.
             */
            WithCreate withDefaultContentKeyPolicyName(String defaultContentKeyPolicyName);
        }

        /**
         * The stage of the  update allowing to specify EndTime.
         */
        interface WithEndTime {
            /**
             * Specifies endTime.
             */
            WithCreate withEndTime(DateTime endTime);
        }

        /**
         * The stage of the  update allowing to specify StartTime.
         */
        interface WithStartTime {
            /**
             * Specifies startTime.
             */
            WithCreate withStartTime(DateTime startTime);
        }

        /**
         * The stage of the  update allowing to specify StreamingLocatorId.
         */
        interface WithStreamingLocatorId {
            /**
             * Specifies streamingLocatorId.
             */
            WithCreate withStreamingLocatorId(UUID streamingLocatorId);
        }

        /**
         * The stage of the  update allowing to specify StreamingPolicyName.
         */
        interface WithStreamingPolicyName {
            /**
             * Specifies streamingPolicyName.
             */
            WithCreate withStreamingPolicyName(String streamingPolicyName);
        }

        /**
         * The stage of the definition which contains all the minimum required inputs for
         * the resource to be created (via {@link WithCreate#create()}), but also allows
         * for any other optional settings to be specified.
         */
        interface WithCreate extends Creatable<StreamingLocator>, DefinitionStages.WithAssetName, DefinitionStages.WithContentKeys, DefinitionStages.WithDefaultContentKeyPolicyName, DefinitionStages.WithEndTime, DefinitionStages.WithStartTime, DefinitionStages.WithStreamingLocatorId, DefinitionStages.WithStreamingPolicyName {
        }
    }
    /**
     * The template for a StreamingLocator update operation, containing all the settings that can be modified.
     */
    interface Update extends Appliable<StreamingLocator>, UpdateStages.WithAssetName, UpdateStages.WithContentKeys, UpdateStages.WithDefaultContentKeyPolicyName, UpdateStages.WithEndTime, UpdateStages.WithStartTime, UpdateStages.WithStreamingLocatorId, UpdateStages.WithStreamingPolicyName {
    }

    /**
     * Grouping of StreamingLocator update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the  {0} allowing to specify AssetName.
         */
        interface WithAssetName {
            /**
             * Specifies assetName.
             */
            Update withAssetName(String assetName);
        }

        /**
         * The stage of the  {0} allowing to specify ContentKeys.
         */
        interface WithContentKeys {
            /**
             * Specifies contentKeys.
             */
            Update withContentKeys(List<StreamingLocatorUserDefinedContentKey> contentKeys);
        }

        /**
         * The stage of the  {0} allowing to specify DefaultContentKeyPolicyName.
         */
        interface WithDefaultContentKeyPolicyName {
            /**
             * Specifies defaultContentKeyPolicyName.
             */
            Update withDefaultContentKeyPolicyName(String defaultContentKeyPolicyName);
        }

        /**
         * The stage of the  {0} allowing to specify EndTime.
         */
        interface WithEndTime {
            /**
             * Specifies endTime.
             */
            Update withEndTime(DateTime endTime);
        }

        /**
         * The stage of the  {0} allowing to specify StartTime.
         */
        interface WithStartTime {
            /**
             * Specifies startTime.
             */
            Update withStartTime(DateTime startTime);
        }

        /**
         * The stage of the  {0} allowing to specify StreamingLocatorId.
         */
        interface WithStreamingLocatorId {
            /**
             * Specifies streamingLocatorId.
             */
            Update withStreamingLocatorId(UUID streamingLocatorId);
        }

        /**
         * The stage of the  {0} allowing to specify StreamingPolicyName.
         */
        interface WithStreamingPolicyName {
            /**
             * Specifies streamingPolicyName.
             */
            Update withStreamingPolicyName(String streamingPolicyName);
        }

    }
}
