/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.mediaservices;

import com.microsoft.azure.management.resources.fluentcore.collection.SupportsCreating;
import com.microsoft.azure.management.mediaservices.implementation.TransformsInner;
import com.microsoft.azure.management.resources.fluentcore.model.HasInner;
import rx.Completable;
import rx.Observable;

/**
 * Type representing Transforms.
 */
public interface Transforms extends SupportsCreating<Transform.DefinitionStages.Blank>, HasInner<TransformsInner> {

    /**
     * @return Entry point to manage Transform Job.
     */
    Jobs jobs();

    /**
* List Transforms.
    * Lists the Transforms in the account.
    *
    * @param resourceGroupName The name of the resource group within the Azure subscription.
    * @param accountName The Media Services account name.
    * @throws IllegalArgumentException thrown if parameters fail the validation
    * @return the observable for the request
    */
    Observable<Transform> listByMediaserviceAsync(final String resourceGroupName, final String accountName);

    /**
* Get Transform.
    * Gets a Transform.
    *
    * @param resourceGroupName The name of the resource group within the Azure subscription.
    * @param accountName The Media Services account name.
    * @param transformName The Transform name.
    * @throws IllegalArgumentException thrown if parameters fail the validation
    * @return the observable for the request
    */
    Observable<Transform> getByMediaserviceAsync(String resourceGroupName, String accountName, String transformName);

    /**
* Delete Transform.
    * Deletes a Transform.
    *
    * @param resourceGroupName The name of the resource group within the Azure subscription.
    * @param accountName The Media Services account name.
    * @param transformName The Transform name.
    * @throws IllegalArgumentException thrown if parameters fail the validation
    * @return the observable for the request
    */
    Completable deleteByMediaserviceAsync(String resourceGroupName, String accountName, String transformName);
}
