/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.mediaservices.implementation;

import com.microsoft.azure.management.resources.fluentcore.model.implementation.WrapperImpl;
import com.microsoft.azure.management.mediaservices.Providers;
import com.microsoft.azure.management.mediaservices.EntityNameAvailabilityCheckOutput;
import rx.Observable;
import rx.functions.Func1;

class ProvidersImpl extends WrapperImpl<ProvidersInner> implements Providers {
    private final MediaManager manager;

    ProvidersImpl(MediaManager manager) {
        super(manager.inner().providers());
        this.manager = manager;
    }

    public MediaManager manager() {
        return this.manager;
    }

    @Override
    public Observable<EntityNameAvailabilityCheckOutput> checkNameAvailabilityAsync(CheckNameAvailabilityInputInner parameters) {
        ProvidersInner client = this.inner();
        return client.checkNameAvailabilityAsync(parameters)
        .map(new Func1<EntityNameAvailabilityCheckOutputInner, EntityNameAvailabilityCheckOutput>() {
            @Override
            public EntityNameAvailabilityCheckOutput call(EntityNameAvailabilityCheckOutputInner inner) {
                return new EntityNameAvailabilityCheckOutputImpl(inner, manager());
            }
        });
    }

}
