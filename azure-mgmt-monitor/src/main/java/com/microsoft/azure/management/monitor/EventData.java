/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.monitor;

import com.microsoft.azure.management.apigeneration.LangDefinition;
import com.microsoft.azure.management.apigeneration.LangMethodDefinition;
import com.microsoft.azure.management.monitor.implementation.EventDataInner;
import org.joda.time.DateTime;

import java.util.Map;

/**
 * The Azure event log entries are of type EventData.
 */
@LangDefinition(ContainerName = "/Microsoft.Azure.Management.Monitor.Fluent.Models")
public class EventData {
    private EventDataInner inner;
    private LocalizableString eventName;
    private LocalizableString category;
    private LocalizableString resourceProviderName;
    private LocalizableString resourceType;
    private LocalizableString operationName;
    private LocalizableString status;
    private LocalizableString subStatus;

    /**
     * Construct EventData object from server response object.
     *
     * @param inner server response object containing resource usages.
     */
    public EventData(EventDataInner inner) {
        this.inner = inner;
        this.eventName = (inner.eventName() == null) ? null : new LocalizableString(inner.eventName());
        this.category = (inner.category() == null) ? null : new LocalizableString(inner.category());
        this.resourceProviderName = (inner.resourceProviderName() == null) ? null : new LocalizableString(inner.resourceProviderName());
        this.resourceType = (inner.resourceType() == null) ? null : new LocalizableString(inner.resourceType());
        this.operationName = (inner.operationName() == null) ? null : new LocalizableString(inner.operationName());
        this.status = (inner.status() == null) ? null : new LocalizableString(inner.status());
        this.subStatus = (inner.subStatus() == null) ? null : new LocalizableString(inner.subStatus());
    }

    /**
     * Get the authorization value.
     *
     * @return the authorization value
     */
    @LangMethodDefinition(AsType = LangMethodDefinition.LangMethodType.Property)
    public SenderAuthorization authorization() {
        return this.inner.authorization();
    }

    /**
     * Get the claims value.
     *
     * @return the claims value
     */
    @LangMethodDefinition(AsType = LangMethodDefinition.LangMethodType.Property)
    public Map<String, String> claims() {
        return this.inner.claims();
    }

    /**
     * Get the caller value.
     *
     * @return the caller value
     */
    @LangMethodDefinition(AsType = LangMethodDefinition.LangMethodType.Property)
    public String caller() {
        return this.inner.caller();
    }

    /**
     * Get the description value.
     *
     * @return the description value
     */
    @LangMethodDefinition(AsType = LangMethodDefinition.LangMethodType.Property)
    public String description() {
        return this.inner.description();
    }

    /**
     * Get the id value.
     *
     * @return the id value
     */
    @LangMethodDefinition(AsType = LangMethodDefinition.LangMethodType.Property)
    public String id() {
        return this.inner.id();
    }

    /**
     * Get the eventDataId value.
     *
     * @return the eventDataId value
     */
    @LangMethodDefinition(AsType = LangMethodDefinition.LangMethodType.Property)
    public String eventDataId() {
        return this.inner.eventDataId();
    }

    /**
     * Get the correlationId value.
     *
     * @return the correlationId value
     */
    @LangMethodDefinition(AsType = LangMethodDefinition.LangMethodType.Property)
    public String correlationId() {
        return this.inner.correlationId();
    }

    /**
     * Get the eventName value.
     *
     * @return the eventName value
     */
    @LangMethodDefinition(AsType = LangMethodDefinition.LangMethodType.Property)
    public LocalizableString eventName() {
        return this.eventName;
    }

    /**
     * Get the category value.
     *
     * @return the category value
     */
    @LangMethodDefinition(AsType = LangMethodDefinition.LangMethodType.Property)
    public LocalizableString category() {
        return this.category;
    }

    /**
     * Get the httpRequest value.
     *
     * @return the httpRequest value
     */
    @LangMethodDefinition(AsType = LangMethodDefinition.LangMethodType.Property)
    public HttpRequestInfo httpRequest() {
        return this.inner.httpRequest();
    }

    /**
     * Get the level value.
     *
     * @return the level value
     */
    @LangMethodDefinition(AsType = LangMethodDefinition.LangMethodType.Property)
    public EventLevel level() {
        return this.inner.level();
    }

    /**
     * Get the resourceGroupName value.
     *
     * @return the resourceGroupName value
     */
    @LangMethodDefinition(AsType = LangMethodDefinition.LangMethodType.Property)
    public String resourceGroupName() {
        return this.inner.resourceGroupName();
    }

    /**
     * Get the resourceProviderName value.
     *
     * @return the resourceProviderName value
     */
    @LangMethodDefinition(AsType = LangMethodDefinition.LangMethodType.Property)
    public LocalizableString resourceProviderName() {
        return this.resourceProviderName;
    }

    /**
     * Get the resourceId value.
     *
     * @return the resourceId value
     */
    @LangMethodDefinition(AsType = LangMethodDefinition.LangMethodType.Property)
    public String resourceId() {
        return this.inner.resourceId();
    }

    /**
     * Get the resourceType value.
     *
     * @return the resourceType value
     */
    @LangMethodDefinition(AsType = LangMethodDefinition.LangMethodType.Property)
    public LocalizableString resourceType() {
        return this.resourceType;
    }

    /**
     * Get the operationId value.
     *
     * @return the operationId value
     */
    @LangMethodDefinition(AsType = LangMethodDefinition.LangMethodType.Property)
    public String operationId() {
        return this.inner.operationId();
    }

    /**
     * Get the operationName value.
     *
     * @return the operationName value
     */
    @LangMethodDefinition(AsType = LangMethodDefinition.LangMethodType.Property)
    public LocalizableString operationName() {
        return this.operationName;
    }

    /**
     * Get the properties value.
     *
     * @return the properties value
     */
    @LangMethodDefinition(AsType = LangMethodDefinition.LangMethodType.Property)
    public Map<String, String> properties() {
        return this.inner.properties();
    }

    /**
     * Get the status value.
     *
     * @return the status value
     */
    @LangMethodDefinition(AsType = LangMethodDefinition.LangMethodType.Property)
    public LocalizableString status() {
        return this.status;
    }

    /**
     * Get the subStatus value.
     *
     * @return the subStatus value
     */
    @LangMethodDefinition(AsType = LangMethodDefinition.LangMethodType.Property)
    public LocalizableString subStatus() {
        return this.subStatus;
    }

    /**
     * Get the eventTimestamp value.
     *
     * @return the eventTimestamp value
     */
    @LangMethodDefinition(AsType = LangMethodDefinition.LangMethodType.Property)
    public DateTime eventTimestamp() {
        return this.inner.eventTimestamp();
    }

    /**
     * Get the submissionTimestamp value.
     *
     * @return the submissionTimestamp value
     */
    @LangMethodDefinition(AsType = LangMethodDefinition.LangMethodType.Property)
    public DateTime submissionTimestamp() {
        return this.inner.submissionTimestamp();
    }

    /**
     * Get the subscriptionId value.
     *
     * @return the subscriptionId value
     */
    @LangMethodDefinition(AsType = LangMethodDefinition.LangMethodType.Property)
    public String subscriptionId() {
        return this.inner.subscriptionId();
    }

    /**
     * Get the tenantId value.
     *
     * @return the tenantId value
     */
    @LangMethodDefinition(AsType = LangMethodDefinition.LangMethodType.Property)
    public String tenantId() {
        return this.inner.tenantId();
    }
}
