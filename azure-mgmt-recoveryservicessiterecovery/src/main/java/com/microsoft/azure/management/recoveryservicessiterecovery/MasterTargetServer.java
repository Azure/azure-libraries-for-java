/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.recoveryservicessiterecovery;

import org.joda.time.DateTime;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Details of a Master Target Server.
 */
public class MasterTargetServer {
    /**
     * The server Id.
     */
    @JsonProperty(value = "id")
    private String id;

    /**
     * The IP address of the server.
     */
    @JsonProperty(value = "ipAddress")
    private String ipAddress;

    /**
     * The server name.
     */
    @JsonProperty(value = "name")
    private String name;

    /**
     * The OS type of the server.
     */
    @JsonProperty(value = "osType")
    private String osType;

    /**
     * The version of the scout component on the server.
     */
    @JsonProperty(value = "agentVersion")
    private String agentVersion;

    /**
     * The last heartbeat received from the server.
     */
    @JsonProperty(value = "lastHeartbeat")
    private DateTime lastHeartbeat;

    /**
     * Version status.
     */
    @JsonProperty(value = "versionStatus")
    private String versionStatus;

    /**
     * The retention volumes of Master target Server.
     */
    @JsonProperty(value = "retentionVolumes")
    private List<RetentionVolume> retentionVolumes;

    /**
     * The list of data stores in the fabric.
     */
    @JsonProperty(value = "dataStores")
    private List<DataStore> dataStores;

    /**
     * Validation errors.
     */
    @JsonProperty(value = "validationErrors")
    private List<HealthError> validationErrors;

    /**
     * Health errors.
     */
    @JsonProperty(value = "healthErrors")
    private List<HealthError> healthErrors;

    /**
     * Disk count of the master target.
     */
    @JsonProperty(value = "diskCount")
    private Integer diskCount;

    /**
     * OS Version of the master target.
     */
    @JsonProperty(value = "osVersion")
    private String osVersion;

    /**
     * Agent expiry date.
     */
    @JsonProperty(value = "agentExpiryDate")
    private DateTime agentExpiryDate;

    /**
     * MARS agent version.
     */
    @JsonProperty(value = "marsAgentVersion")
    private String marsAgentVersion;

    /**
     * MARS agent expiry date.
     */
    @JsonProperty(value = "marsAgentExpiryDate")
    private DateTime marsAgentExpiryDate;

    /**
     * Agent version details.
     */
    @JsonProperty(value = "agentVersionDetails")
    private VersionDetails agentVersionDetails;

    /**
     * Mars agent version details.
     */
    @JsonProperty(value = "marsAgentVersionDetails")
    private VersionDetails marsAgentVersionDetails;

    /**
     * Get the id value.
     *
     * @return the id value
     */
    public String id() {
        return this.id;
    }

    /**
     * Set the id value.
     *
     * @param id the id value to set
     * @return the MasterTargetServer object itself.
     */
    public MasterTargetServer withId(String id) {
        this.id = id;
        return this;
    }

    /**
     * Get the ipAddress value.
     *
     * @return the ipAddress value
     */
    public String ipAddress() {
        return this.ipAddress;
    }

    /**
     * Set the ipAddress value.
     *
     * @param ipAddress the ipAddress value to set
     * @return the MasterTargetServer object itself.
     */
    public MasterTargetServer withIpAddress(String ipAddress) {
        this.ipAddress = ipAddress;
        return this;
    }

    /**
     * Get the name value.
     *
     * @return the name value
     */
    public String name() {
        return this.name;
    }

    /**
     * Set the name value.
     *
     * @param name the name value to set
     * @return the MasterTargetServer object itself.
     */
    public MasterTargetServer withName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get the osType value.
     *
     * @return the osType value
     */
    public String osType() {
        return this.osType;
    }

    /**
     * Set the osType value.
     *
     * @param osType the osType value to set
     * @return the MasterTargetServer object itself.
     */
    public MasterTargetServer withOsType(String osType) {
        this.osType = osType;
        return this;
    }

    /**
     * Get the agentVersion value.
     *
     * @return the agentVersion value
     */
    public String agentVersion() {
        return this.agentVersion;
    }

    /**
     * Set the agentVersion value.
     *
     * @param agentVersion the agentVersion value to set
     * @return the MasterTargetServer object itself.
     */
    public MasterTargetServer withAgentVersion(String agentVersion) {
        this.agentVersion = agentVersion;
        return this;
    }

    /**
     * Get the lastHeartbeat value.
     *
     * @return the lastHeartbeat value
     */
    public DateTime lastHeartbeat() {
        return this.lastHeartbeat;
    }

    /**
     * Set the lastHeartbeat value.
     *
     * @param lastHeartbeat the lastHeartbeat value to set
     * @return the MasterTargetServer object itself.
     */
    public MasterTargetServer withLastHeartbeat(DateTime lastHeartbeat) {
        this.lastHeartbeat = lastHeartbeat;
        return this;
    }

    /**
     * Get the versionStatus value.
     *
     * @return the versionStatus value
     */
    public String versionStatus() {
        return this.versionStatus;
    }

    /**
     * Set the versionStatus value.
     *
     * @param versionStatus the versionStatus value to set
     * @return the MasterTargetServer object itself.
     */
    public MasterTargetServer withVersionStatus(String versionStatus) {
        this.versionStatus = versionStatus;
        return this;
    }

    /**
     * Get the retentionVolumes value.
     *
     * @return the retentionVolumes value
     */
    public List<RetentionVolume> retentionVolumes() {
        return this.retentionVolumes;
    }

    /**
     * Set the retentionVolumes value.
     *
     * @param retentionVolumes the retentionVolumes value to set
     * @return the MasterTargetServer object itself.
     */
    public MasterTargetServer withRetentionVolumes(List<RetentionVolume> retentionVolumes) {
        this.retentionVolumes = retentionVolumes;
        return this;
    }

    /**
     * Get the dataStores value.
     *
     * @return the dataStores value
     */
    public List<DataStore> dataStores() {
        return this.dataStores;
    }

    /**
     * Set the dataStores value.
     *
     * @param dataStores the dataStores value to set
     * @return the MasterTargetServer object itself.
     */
    public MasterTargetServer withDataStores(List<DataStore> dataStores) {
        this.dataStores = dataStores;
        return this;
    }

    /**
     * Get the validationErrors value.
     *
     * @return the validationErrors value
     */
    public List<HealthError> validationErrors() {
        return this.validationErrors;
    }

    /**
     * Set the validationErrors value.
     *
     * @param validationErrors the validationErrors value to set
     * @return the MasterTargetServer object itself.
     */
    public MasterTargetServer withValidationErrors(List<HealthError> validationErrors) {
        this.validationErrors = validationErrors;
        return this;
    }

    /**
     * Get the healthErrors value.
     *
     * @return the healthErrors value
     */
    public List<HealthError> healthErrors() {
        return this.healthErrors;
    }

    /**
     * Set the healthErrors value.
     *
     * @param healthErrors the healthErrors value to set
     * @return the MasterTargetServer object itself.
     */
    public MasterTargetServer withHealthErrors(List<HealthError> healthErrors) {
        this.healthErrors = healthErrors;
        return this;
    }

    /**
     * Get the diskCount value.
     *
     * @return the diskCount value
     */
    public Integer diskCount() {
        return this.diskCount;
    }

    /**
     * Set the diskCount value.
     *
     * @param diskCount the diskCount value to set
     * @return the MasterTargetServer object itself.
     */
    public MasterTargetServer withDiskCount(Integer diskCount) {
        this.diskCount = diskCount;
        return this;
    }

    /**
     * Get the osVersion value.
     *
     * @return the osVersion value
     */
    public String osVersion() {
        return this.osVersion;
    }

    /**
     * Set the osVersion value.
     *
     * @param osVersion the osVersion value to set
     * @return the MasterTargetServer object itself.
     */
    public MasterTargetServer withOsVersion(String osVersion) {
        this.osVersion = osVersion;
        return this;
    }

    /**
     * Get the agentExpiryDate value.
     *
     * @return the agentExpiryDate value
     */
    public DateTime agentExpiryDate() {
        return this.agentExpiryDate;
    }

    /**
     * Set the agentExpiryDate value.
     *
     * @param agentExpiryDate the agentExpiryDate value to set
     * @return the MasterTargetServer object itself.
     */
    public MasterTargetServer withAgentExpiryDate(DateTime agentExpiryDate) {
        this.agentExpiryDate = agentExpiryDate;
        return this;
    }

    /**
     * Get the marsAgentVersion value.
     *
     * @return the marsAgentVersion value
     */
    public String marsAgentVersion() {
        return this.marsAgentVersion;
    }

    /**
     * Set the marsAgentVersion value.
     *
     * @param marsAgentVersion the marsAgentVersion value to set
     * @return the MasterTargetServer object itself.
     */
    public MasterTargetServer withMarsAgentVersion(String marsAgentVersion) {
        this.marsAgentVersion = marsAgentVersion;
        return this;
    }

    /**
     * Get the marsAgentExpiryDate value.
     *
     * @return the marsAgentExpiryDate value
     */
    public DateTime marsAgentExpiryDate() {
        return this.marsAgentExpiryDate;
    }

    /**
     * Set the marsAgentExpiryDate value.
     *
     * @param marsAgentExpiryDate the marsAgentExpiryDate value to set
     * @return the MasterTargetServer object itself.
     */
    public MasterTargetServer withMarsAgentExpiryDate(DateTime marsAgentExpiryDate) {
        this.marsAgentExpiryDate = marsAgentExpiryDate;
        return this;
    }

    /**
     * Get the agentVersionDetails value.
     *
     * @return the agentVersionDetails value
     */
    public VersionDetails agentVersionDetails() {
        return this.agentVersionDetails;
    }

    /**
     * Set the agentVersionDetails value.
     *
     * @param agentVersionDetails the agentVersionDetails value to set
     * @return the MasterTargetServer object itself.
     */
    public MasterTargetServer withAgentVersionDetails(VersionDetails agentVersionDetails) {
        this.agentVersionDetails = agentVersionDetails;
        return this;
    }

    /**
     * Get the marsAgentVersionDetails value.
     *
     * @return the marsAgentVersionDetails value
     */
    public VersionDetails marsAgentVersionDetails() {
        return this.marsAgentVersionDetails;
    }

    /**
     * Set the marsAgentVersionDetails value.
     *
     * @param marsAgentVersionDetails the marsAgentVersionDetails value to set
     * @return the MasterTargetServer object itself.
     */
    public MasterTargetServer withMarsAgentVersionDetails(VersionDetails marsAgentVersionDetails) {
        this.marsAgentVersionDetails = marsAgentVersionDetails;
        return this;
    }

}
