// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
// 
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.management.resources;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * The DeploymentProperties model.
 */
@Fluent
public class DeploymentProperties {
    /*
     * The template content. You use this element when you want to pass the
     * template syntax directly in the request rather than link to an existing
     * template. It can be a JObject or well-formed JSON string. Use either the
     * templateLink property or the template property, but not both.
     */
    @JsonProperty(value = "template")
    private Object template;

    /*
     * Entity representing the reference to the template.
     */
    @JsonProperty(value = "templateLink")
    private TemplateLink templateLink;

    /*
     * Name and value pairs that define the deployment parameters for the
     * template. You use this element when you want to provide the parameter
     * values directly in the request rather than link to an existing parameter
     * file. Use either the parametersLink property or the parameters property,
     * but not both. It can be a JObject or a well formed JSON string.
     */
    @JsonProperty(value = "parameters")
    private Object parameters;

    /*
     * Entity representing the reference to the deployment parameters.
     */
    @JsonProperty(value = "parametersLink")
    private ParametersLink parametersLink;

    /*
     * The mode that is used to deploy resources. This value can be either
     * Incremental or Complete. In Incremental mode, resources are deployed
     * without deleting existing resources that are not included in the
     * template. In Complete mode, resources are deployed and existing
     * resources in the resource group that are not included in the template
     * are deleted. Be careful when using Complete mode as you may
     * unintentionally delete resources.
     */
    @JsonProperty(value = "mode", required = true)
    private DeploymentMode mode;

    /*
     * The debug setting.
     */
    @JsonProperty(value = "debugSetting")
    private DebugSetting debugSetting;

    /*
     * Deployment on error behavior.
     */
    @JsonProperty(value = "onErrorDeployment")
    private OnErrorDeployment onErrorDeployment;

    /**
     * Get the template property: The template content. You use this element
     * when you want to pass the template syntax directly in the request rather
     * than link to an existing template. It can be a JObject or well-formed
     * JSON string. Use either the templateLink property or the template
     * property, but not both.
     * 
     * @return the template value.
     */
    public Object getTemplate() {
        return this.template;
    }

    /**
     * Set the template property: The template content. You use this element
     * when you want to pass the template syntax directly in the request rather
     * than link to an existing template. It can be a JObject or well-formed
     * JSON string. Use either the templateLink property or the template
     * property, but not both.
     * 
     * @param template the template value to set.
     * @return the DeploymentProperties object itself.
     */
    public DeploymentProperties setTemplate(Object template) {
        this.template = template;
        return this;
    }

    /**
     * Get the templateLink property: Entity representing the reference to the
     * template.
     * 
     * @return the templateLink value.
     */
    public TemplateLink getTemplateLink() {
        return this.templateLink;
    }

    /**
     * Set the templateLink property: Entity representing the reference to the
     * template.
     * 
     * @param templateLink the templateLink value to set.
     * @return the DeploymentProperties object itself.
     */
    public DeploymentProperties setTemplateLink(TemplateLink templateLink) {
        this.templateLink = templateLink;
        return this;
    }

    /**
     * Get the parameters property: Name and value pairs that define the
     * deployment parameters for the template. You use this element when you
     * want to provide the parameter values directly in the request rather than
     * link to an existing parameter file. Use either the parametersLink
     * property or the parameters property, but not both. It can be a JObject
     * or a well formed JSON string.
     * 
     * @return the parameters value.
     */
    public Object getParameters() {
        return this.parameters;
    }

    /**
     * Set the parameters property: Name and value pairs that define the
     * deployment parameters for the template. You use this element when you
     * want to provide the parameter values directly in the request rather than
     * link to an existing parameter file. Use either the parametersLink
     * property or the parameters property, but not both. It can be a JObject
     * or a well formed JSON string.
     * 
     * @param parameters the parameters value to set.
     * @return the DeploymentProperties object itself.
     */
    public DeploymentProperties setParameters(Object parameters) {
        this.parameters = parameters;
        return this;
    }

    /**
     * Get the parametersLink property: Entity representing the reference to
     * the deployment parameters.
     * 
     * @return the parametersLink value.
     */
    public ParametersLink getParametersLink() {
        return this.parametersLink;
    }

    /**
     * Set the parametersLink property: Entity representing the reference to
     * the deployment parameters.
     * 
     * @param parametersLink the parametersLink value to set.
     * @return the DeploymentProperties object itself.
     */
    public DeploymentProperties setParametersLink(ParametersLink parametersLink) {
        this.parametersLink = parametersLink;
        return this;
    }

    /**
     * Get the mode property: The mode that is used to deploy resources. This
     * value can be either Incremental or Complete. In Incremental mode,
     * resources are deployed without deleting existing resources that are not
     * included in the template. In Complete mode, resources are deployed and
     * existing resources in the resource group that are not included in the
     * template are deleted. Be careful when using Complete mode as you may
     * unintentionally delete resources.
     * 
     * @return the mode value.
     */
    public DeploymentMode getMode() {
        return this.mode;
    }

    /**
     * Set the mode property: The mode that is used to deploy resources. This
     * value can be either Incremental or Complete. In Incremental mode,
     * resources are deployed without deleting existing resources that are not
     * included in the template. In Complete mode, resources are deployed and
     * existing resources in the resource group that are not included in the
     * template are deleted. Be careful when using Complete mode as you may
     * unintentionally delete resources.
     * 
     * @param mode the mode value to set.
     * @return the DeploymentProperties object itself.
     */
    public DeploymentProperties setMode(DeploymentMode mode) {
        this.mode = mode;
        return this;
    }

    /**
     * Get the debugSetting property: The debug setting.
     * 
     * @return the debugSetting value.
     */
    public DebugSetting getDebugSetting() {
        return this.debugSetting;
    }

    /**
     * Set the debugSetting property: The debug setting.
     * 
     * @param debugSetting the debugSetting value to set.
     * @return the DeploymentProperties object itself.
     */
    public DeploymentProperties setDebugSetting(DebugSetting debugSetting) {
        this.debugSetting = debugSetting;
        return this;
    }

    /**
     * Get the onErrorDeployment property: Deployment on error behavior.
     * 
     * @return the onErrorDeployment value.
     */
    public OnErrorDeployment getOnErrorDeployment() {
        return this.onErrorDeployment;
    }

    /**
     * Set the onErrorDeployment property: Deployment on error behavior.
     * 
     * @param onErrorDeployment the onErrorDeployment value to set.
     * @return the DeploymentProperties object itself.
     */
    public DeploymentProperties setOnErrorDeployment(OnErrorDeployment onErrorDeployment) {
        this.onErrorDeployment = onErrorDeployment;
        return this;
    }
}
