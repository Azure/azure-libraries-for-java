// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
// 
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.management.storage.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.JsonFlatten;
import com.azure.core.management.ProxyResource;
import com.azure.management.storage.CorsRules;
import com.azure.management.storage.DeleteRetentionPolicy;
import com.azure.management.storage.Sku;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * The FileServiceProperties model.
 */
@JsonFlatten
@Fluent
public class FileServicePropertiesInner extends ProxyResource {
    /*
     * The SKU of the storage account.
     */
    @JsonProperty(value = "sku", access = JsonProperty.Access.WRITE_ONLY)
    private Sku sku;

    /*
     * Sets the CORS rules. You can include up to five CorsRule elements in the
     * request.
     */
    @JsonProperty(value = "properties.cors")
    private CorsRules cors;

    /*
     * The service properties for soft delete.
     */
    @JsonProperty(value = "properties.shareDeleteRetentionPolicy")
    private DeleteRetentionPolicy shareDeleteRetentionPolicy;

    /**
     * Get the sku property: The SKU of the storage account.
     * 
     * @return the sku value.
     */
    public Sku getSku() {
        return this.sku;
    }

    /**
     * Get the cors property: Sets the CORS rules. You can include up to five
     * CorsRule elements in the request.
     * 
     * @return the cors value.
     */
    public CorsRules getCors() {
        return this.cors;
    }

    /**
     * Set the cors property: Sets the CORS rules. You can include up to five
     * CorsRule elements in the request.
     * 
     * @param cors the cors value to set.
     * @return the FileServicePropertiesInner object itself.
     */
    public FileServicePropertiesInner setCors(CorsRules cors) {
        this.cors = cors;
        return this;
    }

    /**
     * Get the shareDeleteRetentionPolicy property: The service properties for
     * soft delete.
     * 
     * @return the shareDeleteRetentionPolicy value.
     */
    public DeleteRetentionPolicy getShareDeleteRetentionPolicy() {
        return this.shareDeleteRetentionPolicy;
    }

    /**
     * Set the shareDeleteRetentionPolicy property: The service properties for
     * soft delete.
     * 
     * @param shareDeleteRetentionPolicy the shareDeleteRetentionPolicy value
     * to set.
     * @return the FileServicePropertiesInner object itself.
     */
    public FileServicePropertiesInner setShareDeleteRetentionPolicy(DeleteRetentionPolicy shareDeleteRetentionPolicy) {
        this.shareDeleteRetentionPolicy = shareDeleteRetentionPolicy;
        return this;
    }
}
