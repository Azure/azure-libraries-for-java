/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.v2.management.storage.implementation;

import com.microsoft.azure.v2.AzureProxy;
import com.microsoft.azure.v2.CloudException;
import com.microsoft.rest.v2.BodyResponse;
import com.microsoft.rest.v2.ServiceCallback;
import com.microsoft.rest.v2.ServiceFuture;
import com.microsoft.rest.v2.annotations.ExpectedResponses;
import com.microsoft.rest.v2.annotations.GET;
import com.microsoft.rest.v2.annotations.HeaderParam;
import com.microsoft.rest.v2.annotations.Host;
import com.microsoft.rest.v2.annotations.QueryParam;
import com.microsoft.rest.v2.annotations.UnexpectedResponseExceptionType;
import io.reactivex.Maybe;
import io.reactivex.Single;
import java.util.List;

/**
 * An instance of this class provides access to all the operations defined in
 * Operations.
 */
public final class OperationsInner {
    /**
     * The proxy service used to perform REST calls.
     */
    private OperationsService service;

    /**
     * The service client containing this operation class.
     */
    private StorageManagementClientImpl client;

    /**
     * Initializes an instance of OperationsInner.
     *
     * @param client the instance of the service client containing this operation class.
     */
    public OperationsInner(StorageManagementClientImpl client) {
        this.service = AzureProxy.create(OperationsService.class, client);
        this.client = client;
    }

    /**
     * The interface defining all the services for Operations to be used by the
     * proxy service to perform REST calls.
     */
    @Host("https://management.azure.com")
    private interface OperationsService {
        @GET("providers/Microsoft.Storage/operations")
        @ExpectedResponses({200})
        @UnexpectedResponseExceptionType(CloudException.class)
        Single<BodyResponse<List<OperationInner>>> list(@QueryParam("api-version") String apiVersion, @HeaderParam("accept-language") String acceptLanguage);
    }

    /**
     * Lists all of the available Storage Rest API operations.
     *
     * @throws CloudException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the List&lt;OperationInner&gt; object if successful.
     */
    public List<OperationInner> list() {
        return listAsync().blockingGet();
    }

    /**
     * Lists all of the available Storage Rest API operations.
     *
     * @param serviceCallback the async ServiceCallback to handle successful and failed responses.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @return a ServiceFuture which will be completed with the result of the network request.
     */
    public ServiceFuture<List<OperationInner>> listAsync(ServiceCallback<List<OperationInner>> serviceCallback) {
        return ServiceFuture.fromBody(listAsync(), serviceCallback);
    }

    /**
     * Lists all of the available Storage Rest API operations.
     *
     * @return a Single which performs the network request upon subscription.
     */
    public Single<BodyResponse<List<OperationInner>>> listWithRestResponseAsync() {
        if (this.client.apiVersion() == null) {
            throw new IllegalArgumentException("Parameter this.client.apiVersion() is required and cannot be null.");
        }
        return service.list(this.client.apiVersion(), this.client.acceptLanguage());
    }

    /**
     * Lists all of the available Storage Rest API operations.
     *
     * @return a Single which performs the network request upon subscription.
     */
    public Maybe<List<OperationInner>> listAsync() {
        return listWithRestResponseAsync()
            .flatMapMaybe((BodyResponse<List<OperationInner>> res) -> res.body() == null ? Maybe.empty() : Maybe.just(res.body()));
    }
}
